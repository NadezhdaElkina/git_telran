       Домашнее задание 27.02.23
1.	Как отказаться от изменений в файле/файлах, находящимся в рабочем каталоге?
Команда git checkout .  для удаления изменений во всех файлах, которые были сделаны.
Команда git checkout <имя файла> удаляет изменения для конкретного файла. 
Все изменения безвозвратные.

2.	Как вернуть файл из индекса в рабочий каталог?
Из состояния modified возвращаем файл в рабочий каталог командой 
git restore   - - staged <имя файла>

3.	Как отменить ошибочный commit?
git commit  - - amend позволяет отредактировать коммит и сделать новый
git revert (откат, т.е. создается новый доп коммит, который выполнит изменения, противоположные тому коммиту,
 который отменяется)
git reset (удалить ошибочный коммит, НО! ИСКЛЮЧИТЕЛЬНО в случае, если он не был запушен на GitHub. 
У команды много ключей, по умолчанию - - mixed. 
HEAD используется для уточнения номера удаляемого коммита, н-р, git reset --soft HEAD^^ , HEAD~2 удалит 2 последних коммита)


4.	Как создать новую ветку и переключиться в неё?
     Команда git checkout  -b <имя ветки> создает новую ветку с переходом в неё.

5.	В чём различие между fast-forward merge и non fast-forward merge?
При fast-forward merge в одной из веток нет новых коммитов, а в другой – есть изменения.
 Тогда при слиянии веток указатель HEAD будет показывать на последний новый коммит, а у веток будет общая линия коммитов. 
В случае же, когда после разветвления коммиты были созданы в обеих ветках, при слиянии будет добавлен один новый общий коммит, 
на который будет ссылаться HEAD и будут сохранены две отдельные линии коммитов. 

6.	Когда может возникнуть конфликт слияния веток, как его разрешить?
Конфликты при слиянии веток могут возникнуть, например, при следующих обстоятельствах:
- В одной ветке файл был удалён, а в другой тот же файл был отредактирован
- Была изменена или переписана последовательность коммитов в одной из веток
- Были созданы отличные друг от друга изменения в одном файле в разных ветках.
Способы решения возникших конфликтов:
- Можно отказаться от слияния 
- Если различия касаются знаков пробела (в одном файле – пробелы, в другом- табуляция), можно смержить ветки, используя функцию Xignore – all – space или Xignore – space – change
- Вручную исправить конфликт, например, удаляя ненужные изменения или другим образом привести файл к общему результату.

7.     Можно ли удалить ветку? Как?
Удалить ненужную ветку локально можно командой  git branch -d <имя ветки>. Удалить ветку из удалённого репозитория можно командой git push origin  - -delete <имя ветки> 
